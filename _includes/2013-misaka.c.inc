                                                     /*[*/#include&lt;stdio.h&gt;//
                         #include&lt;stdlib.h&gt;//]++++[-&gt;++[-&gt;+&gt;++++&lt;&lt;]&lt;][(c)2013]
                        #ifndef                                           e//[o
                       #include&lt;string.h&gt;//]![misaka.c,size=3808,crc=d0ec3b36][
                      #define e                                           0x1//
                     typedef struct{int d,b,o,P;char*q,*p;}f;int p,q,d,b,_=0//|
                  #include __FILE__//]&gt;&gt;&gt;[-&gt;+&gt;++&lt;&lt;]&lt;[-&lt;&lt;+&gt;&gt;&gt;++&lt;]&gt;&gt;+MISAKA*IMOUTO
                #undef e//[-&gt;[-&lt;&lt;+&lt;+&lt;+&gt;&gt;&gt;&gt;]&lt;&lt;&lt;&lt;&lt;++[-&gt;&gt;+&gt;&gt;&gt;+&lt;&lt;&lt;&lt;&lt;]&gt;+&gt;+++&gt;+++[&gt;]]b
             #define e(c)/**/if((_!=__LINE__?(_=__LINE__):0)){c;}//[20002,+[-.+]
            ,O,i=0,Q=sizeof(f);static f*P;static FILE*t;static const char*o[]={//
          &quot;\n\40\&quot;8oCan\40not\40open %s\n\0aaFbfeccdeaEbgecbbcda6bcedd#e(bbed$bbd&quot;,
        &quot;a6bgcdbbccd#ead$c%bcdea7bccde*b$eebbdda9bsdbeccdbbecdcbbcceed#eaa&amp;bae$cbe&quot;,
       &quot;e&amp;cbdd$eldbdeedbbdede)bdcdea&amp;bbde1bedbbcc&amp;b#ccdee&amp;bdcdea&#39;bbcd)e&#39;bad(bae&amp;bccd&quot;,
      &quot;e&amp;bbda1bdcdee$bbce#b$c&amp;bdedcd%ecdca4bhcdeebbcd#e$b#ecdcc$bccda7bbcc#e#d%c*bbda&quot;,
     &quot;&gt;bad/bbda&quot;};static int S(){return(o[p][q]);}static/**/int/**/Z=0  ;void/**/z(int//
    l){if(/**/Z-l){Z=l;q++;if(p&lt;b*5&amp;&amp;!S()){p+=b;q=0;}}}int main(int I,    /**/char**l){//
   d=sizeof(f*);if(1&lt;(O=_)){b=((sizeof(o)/sizeof(char*))-1)/4;q=22; p=     0;while(p&lt;b*5){
  /*&lt;*/if(Z-1){d=S()&gt;96;i=S()-(d?96:32) ;q++;if(p&lt;b*5&amp;&amp;!S()){p+=b;  q=      0;}Z=1;}/*[[*/
  while(i){_=o[0][S()-97];I=_-10?b:1;   for( ;I--;)putchar(_ );if   (!      --i||d)z(~i );}
 if(p==b*5&amp;&amp;O){p-=b;O--;}}return 0U;   }if(! (P=( f*)calloc /*]*/  (Q        ,I)))return 1;
 {;}for(_=p=1;p&lt;I;p++){e(q=1);while    (q&lt;   p&amp;&amp;  strcmp(  l[p     ]         ,l[(q)]))++  q;
 t=stdin;if(q&lt;p){(void)memcpy/* &quot;      */    (&amp;P  [p],&amp;P   [q     ]          ,Q);continue ;}
if(strcmp(l[p],&quot;-&quot;)){t=fopen(l         [     p]   ,&quot;rb&quot;   )                  ;if(!t ){{ &quot;{{&quot; }};}  ;
printf(05+*o,l[p ]);return+1;                      {;}                       }}_=b= 1&lt;&lt;16   ;
*&amp;O=5;do{if(!(P[p].q=realloc   (P[p].q,(P[p].P     +=       b)+1))){return   01;}O   &amp;=72   /
6/*][*/;P[p].o+=d=fread(P[p]      .q       +P[     p           ].       o,  1,b,t)   ;}//
 while(d==b)      ;P [p].q[       P[       p]                  .o       ]=  012;d    =0;
 e(fclose(t        )  );P         [p]      .p                  =P[      p]  .q;if    (O)
 {for(;d&lt;P[            p]          .o     ;d=                   q+     1)    {q=     d;
  while(q&lt;P[                        p].o&amp;&amp;P[                    p].q[q]-     10     ){
  q++;}b=q-d;                         _=P                         [p].        d     ;
  if(b&gt;_){/*]b                                                                */
   P[p].d=b;}{;                                                                }
   #undef/*pqdz&#39;.*/  e//                                                      ;
   #define/*s8qdb]*/e/**/0                                                   //
   //&lt;&lt;.&lt;&lt;.----.&gt;.&lt;&lt;.&gt;++.++&lt;                                              .[&gt;]
   /*P[*/P[p].b++;continue;}}}t=                                       stdout;
  for (p=1;p&lt;I;p++){/**/if(P[p].b&gt;i                               ){i=P[p].b;}}
 if  (O){for(p=0;p&lt;i;p++){q=0;/*[*/while(I               &gt;++q){_=P[q].p-P[q ].q;
b=   0;if(_&lt;P[q ].o){while(012-*P[q].p)     {putchar(*(P[q].p++));b++;}P[q]. p++;
}   ;while (P[  q].d&gt;b++)putchar(040);}             putchar(10);}return 0;}p   =1;
   for(;   p&lt;I   ;p++)fwrite(P[p] .q,P[              p].o,1,t);return 0 ;}//
  #/*]     ]&lt;.    [-]&lt;[-]&lt;[- ]&lt;[    -]&lt;               [-  ]&lt;;*/elif  e    //b
 |(1        &lt;&lt;     ( __LINE__        /*               &gt;&gt;   `*//45))  |     01U
             #                       /*               */     endif            //